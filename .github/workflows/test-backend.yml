name: Backend Tests

on:
  workflow_run:
    workflows: ["Backend Linting"]
    types:
      - completed
    branches: [ main, master, develop ]
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' || github.event_name == 'pull_request' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Cache pytest results
        uses: actions/cache@v4
        with:
          path: |
            .pytest_cache
            backend/.pytest_cache
          key: ${{ runner.os }}-pytest-${{ hashFiles('backend/tests/**/*.py') }}
          restore-keys: |
            ${{ runner.os }}-pytest-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-cov

      - name: Run backend tests with coverage
        run: |
          # Create a .env file with test values
          echo "TELEGRAM_BOT_TOKEN=dummy_token" > .env.test
          echo "TELEGRAM_CHAT_ID=-1002575188289" >> .env.test
          echo "DEBUG=True" >> .env
          echo "NOTIFICATION_SERVICE_URL=http://notification_service:8001" >> .env.test
          echo "SCRAPER_SERVICE_URL=http://scraper_service:8002" >> .env.test

          # Run tests with coverage
          cd backend
          pytest --cov --cov-branch --cov-report=xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
