# syntax=docker/dockerfile:1.15

FROM python:3.13.3-slim AS builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    curl && \
    rm -rf /var/lib/apt/lists/*

# Install Rust for pydantic
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Copy and install requirements first (better caching)
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt

# Final stage
FROM python:3.13.3-slim

WORKDIR /app

# Create a non-root user
RUN addgroup --system app && \
    adduser --system --group app

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    libpq5 && \
    rm -rf /var/lib/apt/lists/*

# Copy wheels from builder stage and install
COPY --from=builder /app/wheels /wheels
RUN pip install --no-cache /wheels/*

# Copy only necessary application code
COPY ./api_service ./api_service
COPY ./config ./config
COPY ./core ./core
COPY ./database ./database
COPY ./notification_service ./notification_service
COPY ./scraper_service ./scraper_service
COPY ./pyproject.toml .

# Set permissions
RUN chown -R app:app /app
USER app

# Set Python path to include the app directory
ENV PYTHONPATH=/app

# Default command (will be overridden by docker-compose)
CMD ["python", "-m", "uvicorn", "backend.api_service.app:app", "--host", "0.0.0.0", "--port", "8000"]
